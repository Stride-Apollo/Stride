# Some advice on this configuration was taken from:
# https://genbattle.bitbucket.io/blog/2016/01/17/c++-travis-ci/?

# TODO specify exact versions on which it has to work

# Generic language, because we prefer to handle C++ configuration ourselves
language: generic

dist: trusty

addons:
  apt:
    sources: &sources
      - ubuntu-toolchain-r-test
    packages: &deps
      - libboost-all-dev
      - libhdf5-serial-dev
      - libtbb-dev
      - libtbb2

gcc_addons: &gcc_addons
    apt:
        sources:
            - *sources
        packages:
            - *deps
            - gcc-5
            - g++-5

clang_addons: &clang_addons
    apt:
        sources:
            - *sources
        packages:
            - *deps
            - clang-3.8
            - libc++-dev
            - libiomp-dev


matrix:
  include:
    
    # Code quality ....................
    
    - stage: Code quality
      language: node_js
      env: quality_dir=src/main
      node_js:
        - "node"
      before_install:
      before_script:
        - npm install -g jscpd
      script:
        - travis/code_quality.sh
      addons:
        apt:
    
    - language: node_js
      env: quality_dir=src/test
      node_js:
        - "node"
      before_install:
      before_script:
        - npm install -g jscpd
      script:
        - travis/code_quality.sh
      addons:
        apt:
    
    
    # Unit tests ......................
    
    - stage: Unit tests
      addons: *gcc_addons
      env: 
        - test=unit
        - unipar=dummy
        - compiler=gcc
      
    - addons: *clang_addons
      env: 
        - test=unit
        - unipar=dummy
        - compiler=clang
    
    - addons: *gcc_addons
      env: 
        - test=unit
        - unipar=TBB
        - compiler=gcc
      
    - addons: *clang_addons
      env: 
        - test=unit
        - unipar=TBB
        - compiler=clang
    
    - addons: *gcc_addons
      env: 
        - test=unit
        - unipar=OpenMP
        - compiler=gcc
      
    - addons: *clang_addons
      env: 
        - test=unit
        - unipar=OpenMP
        - compiler=clang
    
    # Scenario tests ..................
    
    - stage: Scenario tests
      addons: *gcc_addons
      env: 
        - test=scenarios
        - unipar=dummy
        - compiler=gcc
      
    - addons: *clang_addons
      env: 
        - test=scenarios
        - unipar=dummy
        - compiler=clang
    
    - addons: *gcc_addons
      env: 
        - test=scenarios
        - unipar=TBB
        - compiler=gcc
      
    - addons: *clang_addons
      env: 
        - test=scenarios
        - unipar=TBB
        - compiler=clang
    
    - addons: *gcc_addons
      env: 
        - test=scenarios
        - unipar=OpenMP
        - compiler=gcc
      
    - addons: *clang_addons
      env: 
        - test=scenarios
        - unipar=OpenMP
        - compiler=clang
        
    # macOS ...........................
    
    #- os: osx
      #osx_image: xcode8.3
      
branches:
  except:
    - Visualization  # No tests written for GUI's, so don't bother

before_install:
  - . ./travis/before_install.sh  # thanks https://github.com/travis-ci/travis-ci/issues/1313
  - PARALLEL_MAKE=2 make install

script:
  - travis_wait ./travis/script.sh

# Cache HDF5 build if needed
#cache:
  #directories:
    #- src/hdf5local/
  
notifications:
  slack: 
    rooms:
      - apollo-stride:u6J7UHJdtlvVNtnUjyRndtgh#repo
    on_failure: always
    on_success: change
  email: false
